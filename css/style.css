/* Make the font-size scale with the window size */
html {
  font-size: clamp(10px, 1.6vw, 16px);
}

:root {
  /* 1rem = the font size of the html element */
  --card-width: 11rem;
  --card-height: 16rem;
}

/* Fit page to window, letting the main element expand to push the footer down */
body {
  --text: black;
  --link: indigo;
  --background-highlight: gold;
  --background-main: honeydew;
  --background-header: thistle;
  --background-card: white;
  --text-card: black;
}

body.darkmode {
  --text: ivory;
  --link: #decade;
  --background-main: #1c1f1e;
  --background-header: #4f254f;
}

a {
  color: var(--link);
}

body {
  display: flex;
  width: 100vw;
  margin: 0;
  flex-direction: column;
  min-height: 100vh;
  font-family: "Montserrat";
  background-color: var(--background-main);
  color: var(--text);
  user-select: none;

  main {
    flex: 1;
  }
}

/* Colour and center header and footer */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 1.3rem;
  background-color: var(--background-header);
  padding: 0 1.4rem;

  #heading {
    font-family: "Montserrat";
    display: flex;
    gap: 1rem;
    align-items: center;
    h1 {
      margin: 0.8rem;
      font-size: 3rem;
      line-height: 3.6rem;
    }
    img {
      font-family: "Montserrat";
      height: 3rem;
    }
  }
}

button#darkmodetoggle {
  height: 3rem;
  width: 3rem;
  border: none;
  background-color: transparent;
  background-image: url("../images/light_mode.svg");
}
.darkmode button#darkmodetoggle {
  background-image: url("../images/dark_mode.svg");
}

footer {
  text-align: center;  
  background-color: var(--background-header);
  h3 {
    font-weight: 500;
    font-size: 1.3rem;
  }
}

/* Position cards into a grid with a variable number of fixed-width columns */
.container {
  padding: 2rem;
  margin: 0 auto;
  max-width: 800px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(var(--card-width), 1fr));
  gap: 1.2rem;
  row-gap: 1.8rem;
}
.card {
  width: var(--card-width);
  height: var(--card-height);
  text-align: center;
  margin: 0 auto;

  .side {
    width: 100%;
    height: 100%;
    border-radius: 5%;
    box-shadow: 0.5rem 0.5rem 1rem rgb(0 0 0 / 16%);
    background-color: var(--background-card);
    color: var(--text-card);;
  }
}

/* Style front of cards */
.card .front {
  img {
    width: 90%;
    height: 70%;
    object-fit: contain;
    object-position: bottom;
    pointer-events: none;
  }

  h2 {
    margin-top: 0;
    padding: 0.6rem;
    font-size: 1.2rem;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
}


/* Style back of cards */
.card .back {
  .requirements {
    padding: 0.6rem 1.2rem 2rem;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 3%;
  }

  /* row 1 of 2: label */
  .requirements::before {
    content: attr(label);
    grid-row: 1;
    grid-column: 1/4;
    text-align: left;
    font-family: "Saira";
    font-size: 1.6rem;
  }

  /* row 2 of 2: bar graph */
  .requirements > div {
    grid-row: 2;
    height: 2rem;
  }

  [label="sunlight"] > div {
    background-color: orange;
  }

  [label="water"] > div {
    background-color: dodgerblue;
  }
}

/* Cards start out white and change color on hover */
.card .front {
  background-color: var(--background-card);
  transition: background-color 0.8s;
}
.card .front:hover {
  background-color: var(--background-highlight);
}

/* Make cards two sided */
.card .front {
  position: absolute;
  transform: rotateY(0deg);
  backface-visibility: hidden;
}
.card .back {
  position: absolute;
  transform: rotateY(180deg);
  backface-visibility: hidden;
}


/* Cards start out front-up and flip when the user hovers */
.card {
  transform-style: preserve-3d;
  transform: rotateY(0deg);
  transition: transform 0.8s;
}

.card.flipped {
  transform: rotateY(180deg);
}